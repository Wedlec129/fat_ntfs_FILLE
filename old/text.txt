
© authors: wedlec & Cryptex

FAT12

Размер сектора в байтах(oxB 2 byte): 0x200 = 512
Размер кластера в секторах(0xD 1 byte): 04 сектора
Зарезерв(0xE 2 byte в секторах): 04

FAT TAble(0x10): 02
Записи вруте(0x11 2 byte): 0xE0  ПО 32 БАЙТА
Размер фат таблиц(0x16 в секторах): 03

fat1 = 0x800						4(сектора)*512==2048 => hex(2048)=0x800		
fat2 = 0xE00						0x800+(	3(размер фат таб)	*512)=>0xe00
root = 0x1400           FORTASK = 0x15C0		0xe00+(3*512)
FILES_DATA = 0x3000					0x1400+( 0xe0 *32 )

FORTASK
----------------------------
size(последние 4 байта): 58 35 | 00 00 =>  00 00 35 58 =>
0x3558 = 13656 байт
----------------------------
Номер первого кластера = 0x1e = 30 кластер
0x800 + (30 * 1.5)

В фат таб находим

1F 40 02 =>  01f 024 => 31 36
0x800 + (36 * 1.5)

25 40 04 => 025 044 => 37 68
0x800 + (68 * 1.5)

45 A0 04 => 045 04A => 69 74
0x800 + (74 * 1.5)

FF CF 04 => FFF 04C Когда дошли до FFF останавливаемся
--------------------------
цепочка кластеров
30 => 31 => 36 => 37 => 68 => 69 => 74
--------------------------
dd		      _	и тд			__
dd if=name_fat.img of=1  bs=1 skip=$((0x3000 + (30 - 2)*4*512))  count=$((4*512))
........
обрезание
dd if=full.bin of=end.bin bs=1 count=$(( размер fortask(13656) ))
md5sum


__________________

Если фат 16 то когда умножаем не на 1.5 а на 2
И цепочки не меняем местам



_______________________________________________________________________

ntfs:
							_____ __
hexdump -C 10.10.16.28.img -n512	__		00 02 02 00 00
					10


hexdump -C 10.10.16.28.img -n$((512*0x2)) -s$((0x200*0x2*0x10)) 		типо находим MFT

hexdump -C 10.10.16.28.img -n$((512*0x2)) -s$((0x200*0x2*0x10+512*2*64))	типо находим файл
Находим файл от атрибута 90 4 строчки вниз

hexdump -C 10.10.16.28.img -n$((512*0x2)) -s$((0x200*0x2*0x10+512*2*0x44))	типо переходим туда в файл
От 80 4 строчки вниз
		02       0068
		сектор	 адресс=6800

					_		  ________
hexdump -C 10.10.16.28.img -n$((512*0x2*2)) -s$((0x200*0x2*0x6800))	получаем содержимое
								  конец-нач+раз
dd if=10.10.16.28.img of=hnmi skip=$((0x200*0x2*0x6800)) count=$((0x1a00550-0x1a00000+8)) bs=1 


